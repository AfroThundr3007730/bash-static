name: build

on:
  - push
  - pull_request

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os:
          - ubuntu-latest
        target:
          - x86_64-linux-musl
          - i386-linux-musl
          - arm-linux-musleabi
          - powerpc64le-linux-musl
          - riscv64-linux-musl
          - s390x-linux-musl
          - mips64-linux-musl
          - mips64el-linux-musl
          - aarch64-linux-musl
        include:
          - os: macos-latest
            target: x86_64-macos-gnu
          - os: macos-latest
            target: aarch64-macos-gnu
          - os: windows-latest
            target: x86_64-windows-gnu
          - os: windows-latest
            target: i386-windows-gnu
          - os: windows-latest
            target: arm-windows-gnu
          - os: windows-latest
            target: aarch64-windows-gnu
    steps:
      - uses: actions/checkout@v2.4.0
      - name: install apt packages
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          sudo apt-get update -qq
          sudo apt-get install -qq build-essential gpg
          brew install zig
      - name: install homebrew packages
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          brew install gnupg zig
      - name: install msys2 for windows
        if: ${{ matrix.os == 'windows-latest' }}
        uses: msys2/setup-msys2@v2
        with:
          update: true
          install: >-
            base-devel
            git
            gcc
          msystem: MSYS
      - name: Set up QEMU binfmt
        if: ${{ matrix.os == 'ubuntu-latest' }}
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all
      - name: build
        run: ./build.sh ${{matrix.target}} && mv -v releases/bash releases/bash-${{matrix.target}}
        shell: bash
      - uses: actions/upload-artifact@v2
        with:
          name: bash-${{matrix.target}}
          path: releases/bash-${{matrix.target}}
  macos-universal:
    needs:
      - build
    runs-on: macos-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          path: artifacts
      - name: create universal binary for macos targets
        run: |
          lipo -create -output bash-universal-macos-gnu releases/bash-x86_64-macos-gnu releases/bash-aarch64-macos-gnu
      - uses: actions/upload-artifact@v2
        with:
          name: bash-universal-macos-gnu
          path: bash-universal-macos-gnu
  release:
    needs:
      - build
      - macos-universal
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.4.0
      - name: generate changelog
        run: ./changelog.sh
      - uses: actions/download-artifact@v2
        with:
          path: artifacts
      - name: make executable
        run: chmod +x artifacts/*
      - name: create release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/*/*
          body_path: NOTES.txt
          fail_on_unmatched_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
